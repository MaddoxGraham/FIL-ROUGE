DROP TABLE IF EXISTS filRouge.FOURNISSEUR;
DROP TABLE IF EXISTS filRouge.CATEGORIE;
DROP TABLE IF EXISTS filRouge.COMMERCIAL;
DROP TABLE IF EXISTS filRouge.COEFFICIENT;  
DROP TABLE IF EXISTS filRouge.ADRESSE;
DROP TABLE IF EXISTS filRouge.FACTURE;
DROP TABLE IF EXISTS filRouge.PRODUIT;
DROP TABLE IF EXISTS filRouge.CLIENT;
DROP TABLE IF EXISTS filRouge.COMMANDE;
DROP TABLE IF EXISTS filRouge.LIVRAISON;
DROP TABLE IF EXISTS filRouge.LIGNECOMMANDE; 
DROP TABLE IF EXISTS filRouge.PHOTOS;
DROP TABLE IF EXISTS filRouge.APPARTENIRCAT; 
DROP TABLE IF EXISTS filRouge.STOCKER; 
DROP TABLE IF EXISTS filRouge.HISTORIQUE; 
DROP TABLE IF EXISTS filRouge.HABITE;    
DROP TABLE IF EXISTS filRouge.LISTER;  
DROP TABLE IF EXISTS filRouge.FACTURER;  

CREATE TABLE FOURNISSEUR(
   RefFournisseur INTEGER NOT NULL AUTO_INCREMENT,
   nomination VARCHAR(255) NOT NULL,
   PRIMARY KEY(RefFournisseur)
);

CREATE TABLE CATEGORIE(
   idCat INTEGER NOT NULL AUTO_INCREMENT,
   nomination VARCHAR(255),
   PRIMARY KEY(idCat)
);

CREATE TABLE COMMERCIAL(
   idCommercial INTEGER NOT NULL AUTO_INCREMENT,
   nom VARCHAR(50),
   prenom VARCHAR(50),
   specificite ENUM('particuliers','professionnels'),
   PRIMARY KEY(idCommercial)
);

CREATE TABLE COEFFICIENT(
   idCoeff INTEGER NOT NULL AUTO_INCREMENT,
   nomination VARCHAR(50),
   PRIMARY KEY(idCoeff)
);

CREATE TABLE ADRESSE(
   IdAdresse INTEGER NOT NULL AUTO_INCREMENT,
   nominationAdresse ENUM('maison','livraison','facturation'),
   adresse VARCHAR(50) NOT NULL,
   ville VARCHAR(50) NOT NULL,
   pays VARCHAR(50) NOT NULL,
   cp VARCHAR(10) NOT NULL,
   actif BOOLEAN NOT NULL,
   PRIMARY KEY(IdAdresse)
);

CREATE TABLE FACTURE(
   numeroFact INTEGER NOT NULL AUTO_INCREMENT,
   delaisPayement DATE DEFAULT CURRENT_DATE NOT NULL,
   modePayement ENUM('virement','cheque','CB'),
   datePayement DATE,
   PRIMARY KEY(numeroFact)
);

CREATE TABLE PRODUIT(
   RefProduit INTEGER NOT NULL AUTO_INCREMENT,
   shortLibel VARCHAR(255) NOT NULL,
   longLibel TEXT,
   prxHT DECIMAL(5.2) NOT NULL,
   idCat INTEGER NOT NULL,
   PRIMARY KEY(RefProduit),
   FOREIGN KEY(idCat) REFERENCES CATEGORIE(idCat)
);

CREATE TABLE CLIENT(
   idClient INTEGER NOT NULL AUTO_INCREMENT,
   nom VARCHAR(50) NOT NULL,
   prenom VARCHAR(50) NOT NULL,
   mail VARCHAR(30) NOT NULL,
   télephone VARCHAR(15),
   login VARCHAR(50) NOT NULL,
   pwd VARCHAR(30) NOT NULL,
   dateInsciprtion DATETIME DEFAULT CURRENT_DATE NOT NULL,
   raisonSociale VARCHAR(30),
   idCoeff INTEGER NOT NULL,
   idCommercial INTEGER  NOT NULL,
   PRIMARY KEY(idClient),
   FOREIGN KEY(idCoeff) REFERENCES COEFFICIENT(idCoeff),
   FOREIGN KEY(idCommercial) REFERENCES COMMERCIAL(idCommercial)
);

CREATE TABLE COMMANDE(
   idCom INTEGER NOT NULL AUTO_INCREMENT,
   dateCom DATETIME DEFAULT CURRENT_DATE NOT NULL,
   reduction INT ,
   TotalTTC DECIMAL(5.2) NOT NULL,
   statut ENUM('en cours','validée') NOT NULL,
   idClient INTEGER NOT NULL,
   PRIMARY KEY(idCom,dateCom),
   FOREIGN KEY(idClient) REFERENCES CLIENT(idClient)
);

CREATE TABLE LIVRAISON(
   idLiv INTEGER NOT NULL AUTO_INCREMENT,
   dateLivraison DATE NOT NULL,
   idCom INTEGER NOT NULL,
   dateCom DATETIME NOT NULL,
   PRIMARY KEY(idLiv),
   FOREIGN KEY(idCom,dateCom) REFERENCES COMMANDE(idCom,dateCom)
);

CREATE TABLE LIGNECOMMANDE(
   reference INTEGER NOT NULL AUTO_INCREMENT,
   quantite INT NOT NULL,
   designation VARCHAR(255) NOT NULL,
   prix DECIMAL(5,2),
   RefProduit INTEGER NOT NULL,
   idCom INTEGER NOT NULL,
   dateCom DATETIME NOT NULL,
   PRIMARY KEY(reference),
   FOREIGN KEY(RefProduit) REFERENCES PRODUIT(RefProduit),
   FOREIGN KEY(idCom, dateCom) REFERENCES COMMANDE(idCom, dateCom)
);

CREATE TABLE PHOTOS(
   idPhoto INTEGER NOT NULL AUTO_INCREMENT,
   src VARCHAR(255) NOT NULL,
   majorPicture BOOLEAN NOT NULL,
   RefProduit INTEGER NOT NULL,
   PRIMARY KEY(idPhoto),
   FOREIGN KEY(RefProduit) REFERENCES PRODUIT(RefProduit)
);

CREATE TABLE APPARTENIRCAT(
   idCat INTEGER,
   sousCat INTEGER,
   PRIMARY KEY(idCat, sousCat),
   FOREIGN KEY(idCat) REFERENCES CATEGORIE(idCat),
   FOREIGN KEY(sousCat) REFERENCES CATEGORIE(idCat)
);

CREATE TABLE STOCKER(
   RefProduit INTEGER,
   RefFournisseur INTEGER,
   quantite INT,
   PRIMARY KEY(RefProduit, RefFournisseur),
   FOREIGN KEY(RefProduit) REFERENCES PRODUIT(RefProduit),
   FOREIGN KEY(RefFournisseur) REFERENCES FOURNISSEUR(RefFournisseur)
);

CREATE TABLE HISTORIQUE(
   idClient INTEGER,
   idCom INTEGER,
   dateCom DATETIME ,
   nomHistorique VARCHAR(50) NOT NULL,
   prenomHistorique VARCHAR(50) NOT NULL,
   mailHistorique VARCHAR(50) NOT NULL,
   telephoneHistorique VARCHAR(50),
   raisonsocialeHistorique VARCHAR(50),
   PRIMARY KEY(idClient, idCom, dateCom),
   FOREIGN KEY(idClient) REFERENCES CLIENT(idClient),
   FOREIGN KEY(idCom, dateCom) REFERENCES COMMANDE(idCom, dateCom)
);

CREATE TABLE HABITE(
   idClient INTEGER,
   IdAdresse INTEGER,
   PRIMARY KEY(idClient, IdAdresse),
   FOREIGN KEY(idClient) REFERENCES CLIENT(idClient),
   FOREIGN KEY(IdAdresse) REFERENCES ADRESSE(IdAdresse)
);

CREATE TABLE LISTER(
   RefProduit INTEGER,
   idLiv INTEGER,
   quantite INT NOT NULL,
   designation VARCHAR(255) NOT NULL,
   PRIMARY KEY(RefProduit, idLiv),
   FOREIGN KEY(RefProduit) REFERENCES PRODUIT(RefProduit),
   FOREIGN KEY(idLiv) REFERENCES LIVRAISON(idLiv)
);

CREATE TABLE FACTURER(
   idCom INTEGER,
   dateCom DATETIME,
   numeroFact INTEGER,
   PRIMARY KEY(idCom, dateCom, numeroFact),
   FOREIGN KEY(idCom, dateCom) REFERENCES COMMANDE(idCom, dateCom),
   FOREIGN KEY(numeroFact) REFERENCES FACTURE(numeroFact)
    );
